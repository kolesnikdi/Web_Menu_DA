version: "3.9"
services:
  web:
    build:
      context: .
      dockerfile: Docker/web/Dockerfile
    command:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic --noinput
        python manage.py makemigrations
        python manage.py migrate
        echo "WEB: Migrations process done ..."
        echo " "
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "++                                                                                ++"
        echo "++                      Hatred to russians still not enough!                      ++"
        echo "++                                                                                ++"
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "++                                                                                ++"
        echo "++                            ++          +          ++                           ++"
        echo "++                            ++++       +++       ++++                           ++"
        echo "++                            ++  +     +++++     +  ++                           ++"
        echo "++                            ++  ++    +++++    ++  ++                           ++"
        echo "++                            ++  ++     +++     ++  ++                           ++"
        echo "++                            ++   ++    +++    ++   ++                           ++"
        echo "++                            ++   ++    +++    ++   ++                           ++"
        echo "++                            ++  ++    ++ ++    ++  ++                           ++"
        echo "++                            +++++    ++   ++    +++++                           ++"
        echo "++                            ++ +++++++     +++++++ ++                           ++"
        echo "++                            ++   +++++++++++++++   ++                           ++"
        echo "++                            ++ ++++  ++++++  ++++ +++                           ++"
        echo "++                            +++++++++++++++++++++++++                           ++"
        echo "++                                  ++  ++++  ++                                  ++"
        echo "++                                   ++++++++++                                   ++"
        echo "++                                     ++++++                                     ++"
        echo "++                                       ++                                       ++"
        echo "++                                                                                ++"
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "from registration.models import WebMenuUser; WebMenuUser.objects.filter(email='1234567899@admin.com').exists() or WebMenuUser.objects.create_superuser(mobile_phone='+380634444444', email='1234567899@admin.com', password='$DJANGO_SUPERUSER_PASSWORD')" | python manage.py shell &&
        python manage.py upload_notification_list "/WEB_menu_docker/notification_list.xlsx"
        python manage.py runserver 0.0.0.0:8000
    #        python manage.py upload_menu "/WEB_menu_docker/menu.xlsx"
    ports:
      - 8000:8000
    volumes:
      - .:/WEB_menu_docker # local directory : container directory
#    environment:   # To set env data if it are not defined in the /Web_Menu_DA/.env
#      - POSTGRES_HOST=db
    env_file:
      - .env
    depends_on:
      - db
      - redis_app
#      - rabbitmq
  db:
#    image: postgres:13   # to start db without Dockerfile. disable next 3 rows
    build:
      context: .
      dockerfile: Docker/db/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - 5433:5432  # local port : container port
    expose:
      - 5432

  adminer: # docker with program adminer. It is app for web access to DB Postgres
#    image: adminer:4.8.1   # to start db without Dockerfile. disable next 3 rows
    build:
      context: .
      dockerfile: Docker/adminer/Dockerfile
    restart: always
#    environment:     # to set env without Dockerfile. disable env in Dockerfile_adminer
#      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    ports:
      - 8081:8080

  redis_app:
    build:
      context: .
      dockerfile: Docker/Redis/Dockerfile
    ports:
      - 6379:6379

  rabbitmq:
#    restart: always #
    container_name: rabbitmq
    build:
      context: .
      dockerfile: Docker/rabbitmq/Dockerfile
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEPRECATION_WARNINGS: "global_qos"

  worker: # make task immediately
    container_name: worker
    build:
      context: .
      dockerfile: Docker/celery/Dockerfile
    volumes:
      - ./:/worker #
    command: celery -A celery_app.celery worker -l info
    env_file:
      - .env
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=true

  beat: # make task on schedule
    container_name: beat
    build:
      context: .
      dockerfile: Docker/celery/Dockerfile
    volumes:
      - ./:/beat
    command: celery -A celery_app.celery beat -l info
    env_file:
      - .env
    depends_on:
      - rabbitmq

  flower:
    container_name: flower
    build:
      context: .
      dockerfile: Docker/flower/Dockerfile
    command: celery --broker=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - beat
      - worker

volumes:
  postgres_data:
  rabbitmq_data:
